{
  "hash": "23f91fb5488284d68a7ac1f9cd379be9",
  "result": {
    "markdown": "---\ntitle: \"Vasicek Quantile Regression in Stan\"\nauthor: \"Sean Pinkney\"\ndate: \"2022-10-12\"\ncategories: [model, stan]\nbibliography: references.bib\ndraft: false\n---\n\n\nThe Vasicek distribution from @vasicek is given as\n\n$$\n  \\begin{aligned}\nf(y \\mid \\alpha, \\theta) &= \\sqrt{\\frac{1 - \\theta}{\\theta}} \\exp \\bigg\\{\\frac{1}{2} \\bigg[\\Phi^{-1}(y)^2 - \n                                                                                             \\bigg(\\frac{\\Phi^{-1}(y) \\sqrt{1 - \\theta} - \\Phi^{-1}(\\alpha)}{\\sqrt{\\theta}} \\bigg)^2\n                                                                                           \\bigg\\} \\\\\nF(y \\mid \\alpha, \\theta) &= \\Phi \\bigg( \\frac{\\Phi^{-1}(y) \\sqrt{1 - \\theta} - \\Phi^{-1}(\\alpha)}{\\sqrt{\\theta}} \\bigg) \\\\\nQ(\\tau \\mid \\alpha, \\theta) &= F^{-1}(\\tau \\mid \\alpha, \\theta) = \\Phi \\bigg( \\frac{\\Phi^{-1}(\\alpha) + \\Phi^{-1}(\\tau) \\sqrt{\\theta}}{\\sqrt{1 - \\theta}} \\bigg)\n\\end{aligned}\n$$ where $0 < (y, \\alpha, \\theta, \\tau) < 1$ and $\\Phi$ and $\\Phi^{-1}$ are the standard normal CDF and QF respectively. The mean of the distribtuion is $\\operatorname{E}(Y) = \\alpha$ and $\\operatorname{Var}(Y) = \\Phi_2(\\Phi^{-1}(\\alpha), \\Phi^{-1}(\\alpha), \\theta)$ where $\\Phi_2$ is the bivariate standard normal CDF.\n\n```stan\n#include copula/normal_copula.stanfunctions\n \narray[] matrix normal_marginal(matrix y, matrix mu_glm, vector sigma) {\n  int N = rows(mu_glm);\n  int J = cols(mu_glm);\n  array[2] matrix[N, J] rtn;\n  // Initialise the jacobian adjustments to zero, as vectorised lpdf will be used\n  rtn[2] = rep_matrix(0, N, J);\n  \n  for (j in 1 : J) {\n    rtn[1][ : , j] = (y[ : , j] - mu_glm[ : , j]) / sigma[j];\n    rtn[2][1, j] = normal_lpdf(y[ : , j] | mu_glm[ : , j], sigma[j]);\n  }\n  \n  return rtn;\n}\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}